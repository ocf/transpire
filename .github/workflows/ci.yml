name: CI

permissions:
  actions: write
  packages: write

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          poetry --version
          poetry install --no-interaction

      - name: Lint
        run: poetry run pre-commit run --all-files

  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          poetry --version
          poetry install --no-interaction

      - name: Test
        run: poetry run coverage run -m pytest

      - name: Prepare coverage report
        run: poetry run coverage xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3

  transpire-ci:
    uses: ocf/transpire-ci/.github/workflows/trigger.yml@master
    with:
      module_name: transpire
    secrets:
      TRANSPIRE_CI_PAT: ${{ secrets.TRANSPIRE_CI_PAT }}

  ghcr-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2

      - id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/ocf/transpire
          flavor: latest=true

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v4
        with:
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
